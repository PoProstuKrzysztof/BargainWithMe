Cześć! 

Dziękuje za odpalenie mojego programu :) 

Jako, że głównie skupiłem się na backendzie, nie tworzyłem UI do tego projektu, bo uważam że nie jest to najważniejsze patrząc na wymagania dane w zadaniu.

Poniżej przedstawiam instrukcje jak przejść przez API z gotowymi encjami do wklejenia do requestów (oczywiście można wpisać swoje, ale dla wygody wolałem je umieścić tutaj :] )


1. W CATALOG w POST tworzymy katalog

{
  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name": "Catalog1"
}

3.Dla pewności sprawdzamy czy katalog poprawnie się stworzył kopiując id => 3fa85f64-5717-4562-b3fc-2c963f66afa6 requesta GET /catalog/{id}

4. Następnie w PRODUCT w POST tworzymy produkt powiązany z katalogiem (dla testu można po stworzeniu odrazu wkleić pole "id" do requesta DELETE poniżej)


{
  "id": "4fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name": "Produkt1",
  "price": {
    "amount": 100.0
  },
  "onStock": 10,
  "catalogId": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
}

5.Dla pewności sprawdzamy czy produkt poprawnie się stworzył kopiując id => 4fa85f64-5717-4562-b3fc-2c963f66afa6 requesta GET /product/{id}

6.Następnie przechodzimy do najważniejszej funkcjonalności, czyli negocjacji ceny, z zadania zrozumiałem, że każdy produkt można próbowac negocjować do 3 razy więc tak też zrobiłem program.
Wchodzimy do requesta POST w sekcji NEGOTIATION i przeklejamy id naszego produktu i dajemy proponowaną cene. Domyślnie szansa na udanie się negocjacji jest ustawiona na 50%.


7.Jeśli negocjacja się udała, to dla weryfikacji wchodzimy do GET w PRODUCT po konkretnym id /product/{id}. Jeśli nie to próbuj dalej! :D



Jeśli moja rekrutacja nie przebiegnie pomyślnie, prosiłbym o krótkie podsumowanie co mogłem zrobić lepiej, czego nie robić, jakich bibliotek lepiej używać czy ogólnie podejścia do struktury programu, z góry dziękuje :) 

